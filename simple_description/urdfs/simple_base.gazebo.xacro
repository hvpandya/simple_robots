<?xml version="1.0"?>
<robot name="kuka_arm" xmlns:xacro="http://wiki.ros.org/xacro">
  <!--Import urdf elements-->
  <xacro:include filename="$(find simple_description)/urdfs/simple_base.urdf.xacro"/>

  <!-- gazebo link properties -->
  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="right_wheel_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="left_wheel_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="caster_wheel_link">
    <material>Gazebo/DarkGray</material>
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
  </gazebo>
  <gazebo reference="laser_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="camera_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- planar lidar -->
  <gazebo reference="laser_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>20.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>/laser_link</frameName>
        <robotNamespace>simple_base</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>

  <!-- rgbd camera -->
  <link name="camera_rgb_frame"/>
  <link name="camera_rgb_optical_frame"/>
  <link name="camera_depth_frame"/>
  <link name="camera_depth_optical_frame"/>

  <joint name="camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.022 0"/>
    <parent link="camera_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin rpy="${-M_PI/2} 0 ${-M_PI/2}" xyz="0 0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
  </joint>
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.049 0"/>
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
  </joint>
  <joint name="camera_depth_optical_joint" type="fixed">
    <origin rpy="${-M_PI/2} 0 ${-M_PI/2}" xyz="0 0 0"/>
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
  </joint>

  <gazebo reference="camera_rgb_frame">
    <sensor type="depth" name="rgbd_camera">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>${70.0*M_PI/180.0}</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>10.0</far>
        </clip>
      </camera>
      <plugin name="rgbd_camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>/camera_rgb_optical_frame</frameName>
        <pointCloudCutoff>0.1</pointCloudCutoff>
        <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
        <robotNamespace>simple_base</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>

  <!-- imu plugin -->
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>/imu_link</bodyName>
        <updateRateHZ>100</updateRateHZ>
        <gaussianNoise>0.05</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>/imu_link</frameName>
        <robotNamespace>simple_base</robotNamespace>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <!-- diff drive controller -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>100</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.425</wheelSeparation>
      <wheelDiameter>0.2</wheelDiameter>
      <torque>0.1</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>wheel_odom</odometryTopic>
      <odometryFrame>/odom</odometryFrame>
      <robotBaseFrame>/base_footprint</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishOdomTF>false</publishOdomTF>
      <robotNamespace>simple_base</robotNamespace>
    </plugin>
  </gazebo>

</robot>
